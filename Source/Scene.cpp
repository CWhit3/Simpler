/*
  ==============================================================================

  This is an automatically generated GUI class created by the Projucer!

  Be careful when adding custom code to these files, as only the code within
  the "//[xyz]" and "//[/xyz]" sections will be retained when the file is loaded
  and re-saved.

  Created with Projucer version: 5.3.2

  ------------------------------------------------------------------------------

  The Projucer is part of the JUCE library.
  Copyright (c) 2017 - ROLI Ltd.

  ==============================================================================
*/

//[Headers] You can add your own extra header files here...
//[/Headers]

#include "Scene.h"


//[MiscUserDefs] You can add your own user definitions and misc code here...
//[/MiscUserDefs]

//==============================================================================
Scene::Scene ()
{
    //[Constructor_pre] You can add your own custom stuff here..
    //[/Constructor_pre]

    setName ("Scene");
    FileNameLabel.reset (new Label ("fileNameLabel",
                                    TRANS("Autogenerated File Name: Distorted 808 E#.wav\n")));
    addAndMakeVisible (FileNameLabel.get());
    FileNameLabel->setFont (Font ("Hiragino Sans", 12.50f, Font::plain).withTypefaceStyle ("W4"));
    FileNameLabel->setJustificationType (Justification::centredLeft);
    FileNameLabel->setEditable (false, false, false);
    FileNameLabel->setColour (Label::backgroundColourId, Colours::white);
    FileNameLabel->setColour (Label::textColourId, Colours::black);
    FileNameLabel->setColour (Label::outlineColourId, Colours::black);
    FileNameLabel->setColour (TextEditor::textColourId, Colours::black);
    FileNameLabel->setColour (TextEditor::backgroundColourId, Colour (0x00cd3737));

    FileNameLabel->setBounds (15, 400, 970, 25);

    TagsLabel.reset (new Label ("tagsDetected",
                                TRANS("Tags Detected:\n")));
    addAndMakeVisible (TagsLabel.get());
    TagsLabel->setFont (Font ("Hiragino Sans", 12.50f, Font::plain).withTypefaceStyle ("W4"));
    TagsLabel->setJustificationType (Justification::centred);
    TagsLabel->setEditable (false, false, false);
    TagsLabel->setColour (Label::backgroundColourId, Colours::white);
    TagsLabel->setColour (Label::textColourId, Colours::black);
    TagsLabel->setColour (Label::outlineColourId, Colours::black);
    TagsLabel->setColour (TextEditor::textColourId, Colours::black);
    TagsLabel->setColour (TextEditor::backgroundColourId, Colour (0x00000000));

    TagsLabel->setBounds (15, 430, 115, 26);

    sampleTag.reset (new TextButton ("TestTag"));
    addAndMakeVisible (sampleTag.get());
    sampleTag->setTooltip (TRANS("Click to remove tag\n"));
    sampleTag->setButtonText (TRANS("Distorted"));
    sampleTag->addListener (this);
    sampleTag->setColour (TextButton::buttonColourId, Colour (0xadd2d2d2));
    sampleTag->setColour (TextButton::buttonOnColourId, Colour (0xff9f9f9f));
    sampleTag->setColour (TextButton::textColourOffId, Colours::black);
    sampleTag->setColour (TextButton::textColourOnId, Colours::black);

    sampleTag->setBounds (135, 430, 100, 25);

    textButton.reset (new TextButton ("new button"));
    addAndMakeVisible (textButton.get());
    textButton->setButtonText (TRANS("add tag"));
    textButton->addListener (this);
    textButton->setColour (TextButton::buttonColourId, Colours::white);
    textButton->setColour (TextButton::buttonOnColourId, Colours::white);
    textButton->setColour (TextButton::textColourOffId, Colours::black);
    textButton->setColour (TextButton::textColourOnId, Colours::black);

    textButton->setBounds (920, 432, 65, 26);

    sampleTag2.reset (new TextButton ("TestTag2"));
    addAndMakeVisible (sampleTag2.get());
    sampleTag2->setTooltip (TRANS("Click to remove tag\n"));
    sampleTag2->setButtonText (TRANS("808"));
    sampleTag2->addListener (this);
    sampleTag2->setColour (TextButton::buttonColourId, Colour (0xadd2d2d2));
    sampleTag2->setColour (TextButton::buttonOnColourId, Colour (0xff9f9f9f));
    sampleTag2->setColour (TextButton::textColourOffId, Colours::black);
    sampleTag2->setColour (TextButton::textColourOnId, Colours::black);

    sampleTag2->setBounds (245, 430, 100, 25);

    sampleTag3.reset (new TextButton ("TestTag2"));
    addAndMakeVisible (sampleTag3.get());
    sampleTag3->setTooltip (TRANS("Click to remove tag\n"));
    sampleTag3->setButtonText (TRANS("E#"));
    sampleTag3->addListener (this);
    sampleTag3->setColour (TextButton::buttonColourId, Colour (0xadd2d2d2));
    sampleTag3->setColour (TextButton::buttonOnColourId, Colour (0xff9f9f9f));
    sampleTag3->setColour (TextButton::textColourOffId, Colours::black);
    sampleTag3->setColour (TextButton::textColourOnId, Colours::black);

    sampleTag3->setBounds (355, 430, 100, 25);


    //[UserPreSize]
    //[/UserPreSize]

    setSize (1000, 800);


    //[Constructor] You can add your own custom stuff here..
    //[/Constructor]
}

Scene::~Scene()
{
    //[Destructor_pre]. You can add your own custom destruction code here..
    //[/Destructor_pre]

    FileNameLabel = nullptr;
    TagsLabel = nullptr;
    sampleTag = nullptr;
    textButton = nullptr;
    sampleTag2 = nullptr;
    sampleTag3 = nullptr;


    //[Destructor]. You can add your own custom destruction code here..
    //[/Destructor]
}

//==============================================================================
void Scene::paint (Graphics& g)
{
    //[UserPrePaint] Add your own custom painting code here..
    //[/UserPrePaint]

    g.fillAll (Colours::white);

    {
        int x = 0, y = 0, width = proportionOfWidth (1.0000f), height = proportionOfHeight (1.0000f);
        Colour fillColour = Colours::white;
        //[UserPaintCustomArguments] Customize the painting arguments here..
        //[/UserPaintCustomArguments]
        g.setColour (fillColour);
        g.fillRect (x, y, width, height);
    }

    //[UserPaint] Add your own custom painting code here..
    //[/UserPaint]
}

void Scene::resized()
{
    //[UserPreResize] Add your own custom resize code here..
    //[/UserPreResize]

    //[UserResized] Add your own custom resize handling here..
    //[/UserResized]
}

void Scene::buttonClicked (Button* buttonThatWasClicked)
{
    //[UserbuttonClicked_Pre]
    //[/UserbuttonClicked_Pre]

    if (buttonThatWasClicked == sampleTag.get())
    {
        //[UserButtonCode_sampleTag] -- add your button handler code here..
        //[/UserButtonCode_sampleTag]
    }
    else if (buttonThatWasClicked == textButton.get())
    {
        //[UserButtonCode_textButton] -- add your button handler code here..
        //[/UserButtonCode_textButton]
    }
    else if (buttonThatWasClicked == sampleTag2.get())
    {
        //[UserButtonCode_sampleTag2] -- add your button handler code here..
        //[/UserButtonCode_sampleTag2]
    }
    else if (buttonThatWasClicked == sampleTag3.get())
    {
        //[UserButtonCode_sampleTag3] -- add your button handler code here..
        //[/UserButtonCode_sampleTag3]
    }

    //[UserbuttonClicked_Post]
    //[/UserbuttonClicked_Post]
}



//[MiscUserCode] You can add your own definitions of your custom methods or any other code here...
//[/MiscUserCode]


//==============================================================================
#if 0
/*  -- Projucer information section --

    This is where the Projucer stores the metadata that describe this GUI layout, so
    make changes in here at your peril!

BEGIN_JUCER_METADATA

<JUCER_COMPONENT documentType="Component" className="Scene" componentName="Scene"
                 parentClasses="public Component" constructorParams="" variableInitialisers=""
                 snapPixels="8" snapActive="1" snapShown="1" overlayOpacity="0.330"
                 fixedSize="1" initialWidth="1000" initialHeight="800">
  <BACKGROUND backgroundColour="ffffffff">
    <RECT pos="0 0 100% 100%" fill="solid: ffffffff" hasStroke="0"/>
  </BACKGROUND>
  <LABEL name="fileNameLabel" id="5dd2c2cb30ec0cff" memberName="FileNameLabel"
         virtualName="" explicitFocusOrder="0" pos="15 400 970 25" bkgCol="ffffffff"
         textCol="ff000000" outlineCol="ff000000" edTextCol="ff000000"
         edBkgCol="cd3737" labelText="Autogenerated File Name: Distorted 808 E#.wav&#10;"
         editableSingleClick="0" editableDoubleClick="0" focusDiscardsChanges="0"
         fontname="Hiragino Sans" fontsize="12.50000000000000000000" kerning="0.00000000000000000000"
         bold="0" italic="0" justification="33" typefaceStyle="W4"/>
  <LABEL name="tagsDetected" id="226a2eb145ad0ee7" memberName="TagsLabel"
         virtualName="" explicitFocusOrder="0" pos="15 430 115 26" bkgCol="ffffffff"
         textCol="ff000000" outlineCol="ff000000" edTextCol="ff000000"
         edBkgCol="0" labelText="Tags Detected:&#10;" editableSingleClick="0"
         editableDoubleClick="0" focusDiscardsChanges="0" fontname="Hiragino Sans"
         fontsize="12.50000000000000000000" kerning="0.00000000000000000000"
         bold="0" italic="0" justification="36" typefaceStyle="W4"/>
  <TEXTBUTTON name="TestTag" id="e627c8376e6ceecc" memberName="sampleTag" virtualName=""
              explicitFocusOrder="0" pos="135 430 100 25" posRelativeW="52c5c85256103df6"
              tooltip="Click to remove tag&#10;" bgColOff="add2d2d2" bgColOn="ff9f9f9f"
              textCol="ff000000" textColOn="ff000000" buttonText="Distorted"
              connectedEdges="0" needsCallback="1" radioGroupId="0"/>
  <TEXTBUTTON name="new button" id="52c5c85256103df6" memberName="textButton"
              virtualName="" explicitFocusOrder="0" pos="920 432 65 26" bgColOff="ffffffff"
              bgColOn="ffffffff" textCol="ff000000" textColOn="ff000000" buttonText="add tag"
              connectedEdges="0" needsCallback="1" radioGroupId="0"/>
  <TEXTBUTTON name="TestTag2" id="7677806730c2a9db" memberName="sampleTag2"
              virtualName="" explicitFocusOrder="0" pos="245 430 100 25" posRelativeW="52c5c85256103df6"
              tooltip="Click to remove tag&#10;" bgColOff="add2d2d2" bgColOn="ff9f9f9f"
              textCol="ff000000" textColOn="ff000000" buttonText="808" connectedEdges="0"
              needsCallback="1" radioGroupId="0"/>
  <TEXTBUTTON name="TestTag2" id="913b1b4edd7f727b" memberName="sampleTag3"
              virtualName="" explicitFocusOrder="0" pos="355 430 100 25" posRelativeW="52c5c85256103df6"
              tooltip="Click to remove tag&#10;" bgColOff="add2d2d2" bgColOn="ff9f9f9f"
              textCol="ff000000" textColOn="ff000000" buttonText="E#" connectedEdges="0"
              needsCallback="1" radioGroupId="0"/>
</JUCER_COMPONENT>

END_JUCER_METADATA
*/
#endif


//[EndFile] You can add extra defines here...
//[/EndFile]
